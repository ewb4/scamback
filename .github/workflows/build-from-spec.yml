name: Build RPM from spec file

on:
  push:
  
  # Allows you to run this workflow manually from the Actions tab
  ## but it only appears to be a valid option when the workflow is on the main/master brance
  workflow_dispatch:
    inputs:
      spec_file:
        description: "Path to the .spec file"
        required: true
        default: 'contrib/rhel/7/SPECS/*.spec'
        type: string
      additional_repos:
        description: "List of additional repos as JSON array"
        type: string
      output_dl_artifacts:
        description: "Add any downloaded artifacts to artifact_array"
        required: true
        default: false
        type: boolean
      verbose:
        description: "Mark verbose option for commands run inside action"
        required: true
        default: false
        type: boolean
      rpm_debug_package:
        description: "Produce debug_package RPMs"
        required: true
        default: true
        type: boolean
      rpm_debugsource_template:
        description: "Produce _debugsource_template RPMs"
        required: true
        default: true
        type: boolean
      who_to_greet:
        description: "Name to greet"
        required: true
        default: "Jose"
        type: string

jobs:
  build:
    name: Build RPM
    permissions:
      contents: write
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: set variable
        id: set_step
        run: |
          echo "# Environment finding spec"
          env | grep -i spec
          if [ -z "${SPEC_FILE}" ] ; then
            if [[ -n "${{ inputs.spec_file }}" ]]; then
              echo "spec_file=${{ inputs.spec_file }}" | tee -a "$GITHUB_OUTPUT"
            else
            # do more here to better determine the spec file if there are...
            ## multiple directories in standard structure
            ## one spec file (even if not matching the build environment dist version)  
            SPEC_FILE=$(find . -name "*.spec" | head -1 | sed 's#./##')
              echo "spec_file=${SPEC_FILE}" | tee -a "$GITHUB_OUTPUT"
            fi
          fi

      - name: set additional repo
        id: set_repo
        run: |
          ## This is most definately a hack... if the input is optional and empty, then it should remain empty
          ##   however this build needs "powertools"
          if [ -z "${{ inputs.additional_repos }}" ] ; then
            # parse with https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse
            # build with the following:
                ## $ printf "%s\n%s\n" "powertools" "powerpoles" | jq -R -s -c 'split("\n") | map(select(length>0))'
            echo 'additional_repos=["powertools"]' | tee -a "$GITHUB_OUTPUT"
          else
            echo "additional_repos=${{ inputs.additional_repos }}" | tee -a "$GITHUB_OUTPUT"
          fi

      - name: List
        run: |
          echo "::group::List env vars"
          env | sort
          echo "::endgroup::"
          echo "::group::Announce SPEC filename"
          echo "Deploying build ${{ steps.set_step.outputs.spec_file }}"
          echo "::endgroup::"
          echo "::group::working directory (pwd)"
          pwd
          echo "::endgroup::"
          echo "::group::Recursive list files from working directory"
          ls -lR
          echo "::endgroup::"

      - name: Validate
        id: validate
        run: |
          echo "::group::Environment"
          env | sort
          echo "::endgroup::"
          echo "::group::working directory (pwd)"
          pwd
          echo "::endgroup::"
          echo "::group::listing all files"
          ls -lR
          echo "::endgroup::"

      # Change @main to a specific commit SHA or version tag, e.g.:
      # actions/hello-world-docker-action@e76147da8e5c81eaf017dede5645551d4b94427b
      # actions/hello-world-docker-action@v1.2.3
      - name: Build RPM in Docker Action
        id: build-rhel-8
        uses: EWBr0wn/hello-world-docker-action@rockylinux-dev
        with:
          spec_file: ${{ steps.set_step.outputs.spec_file }}
          additional_repos: ${{ steps.set_repo.outputs.additional_repos }}
          output_dl_artifacts: true
          verbose: true
          rpm_debug_package: true
          rpm_debugsource_template: true
          # https://docs.github.com/en/actions/learn-github-actions/expressions#example
          who_to_greet: ${{ github.event_name == 'workflow_dispatch' && inputs.who_to_greet || format('One called {0}', github.event_name) }}

      - name: Echo
        run: |
          echo "::group::Gazintas from build-rhel-8"
          echo "Content-type: ${{ steps.build-rhel-8.outputs.rpm_content_type }}"
          echo "RPM(s): '${{ steps.build-rhel-8.outputs.built_rpm_array }}'"
          echo "SRPM: '${{ steps.build-rhel-8.outputs.built_srpm_array }}'"
          echo "output_array: '${{ steps.build-rhel-8.outputs.output_array }}'"
          for r in $(echo '${{ steps.build-rhel-8.outputs.built_rpm_array }}' | jq -r .[]) ; do
            ls -l ${r}
          done
          #for s in $(echo '${{ steps.build-rhel-8.outputs.built_srpm_array }}' | jq -r .[]) ; do
          for s in ${{ join(fromJSON(steps.build-rhel-8.outputs.built_srpm_array), ' ') }} ; do
            ls -l ${s}
          done
          echo "Did we get the right arrays back after changing the correct line?"
          echo ${{ join(fromJSON(steps.build-rhel-8.outputs.built_rpm_array), ' ') }}
          echo ${{ join(fromJSON(steps.build-rhel-8.outputs.built_srpm_array), '
          ') }}
          echo "::endgroup::"
          echo "::group::List output directory"
          ls -lR output
          echo "::endgroup::"
          #echo "| **Label**  | **Value**                                                        |"  > output/ReleaseDescription.md
          #echo "|------------|------------------------------------------------------------------|" >> output/ReleaseDescription.md
          #echo "| Name:      | scamback-1.5.1.tgz                                               |" >> output/ReleaseDescription.md
          #echo "| Size:      | 22748                                                            |" >> output/ReleaseDescription.md
          #echo "| TimeStamp: | Feb 21 02:30:08 2010                                             |" >> output/ReleaseDescription.md
          #echo "| MD5:       | 63165c21ba6bde4bc0532f4af67c3e09                                 |" >> output/ReleaseDescription.md
          #echo "| SHA256:    | db5b650f92f51cfddf1e2e172791396f01375fefd0456eaee910f0645bae6738 |" >> output/ReleaseDescription.md

      - name: Release
        if: true
        uses: softprops/action-gh-release@v2
        with:
          name: scamback-1.5.1-1
          draft: true
          #body_path: output/ReleaseDescription.md
          files: |-
            ${{ join(fromJSON(steps.build-rhel-8.outputs.built_rpm_array), '
            ')}}
            ${{ join(fromJSON(steps.build-rhel-8.outputs.built_srpm_array), '
            ')}}