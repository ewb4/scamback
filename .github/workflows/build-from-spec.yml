name: Build RPM from spec file

on:
  push:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      spec_file:
        description: "Path to the .spec file"
        required: true
        default: 'contrib/rhel/7/SPECS/*.spec'
        type: string
      additional_repos:
        description: "List of additional repos"
        type: string
      who-to-greet:
        description: "Name to greet"
        required: true
        default: "Josa"
        type: string

permissions:
  contents: read

jobs:
  build:
    name: Build RPM
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: set variable
        id: set_step
        run: |
          echo "# Environment finding spec"
          env | grep -i spec
          if [ -z "${SPEC_FILE}" ] ; then
            if [[ -n "${{ inputs.spec_file }}" ]]; then
              echo "spec_file=${{ inputs.spec_file }}" >> $GITHUB_OUTPUT
            else
              SPEC_FILE=$(find . -name "*.spec" | head -1 | sed 's#./##')
              echo "spec_file=${SPEC_FILE}" >> $GITHUB_OUTPUT
            fi
          fi
      - name: set additional repo
        id: set_repo
        run: |
          ## This is most definately a hack... if the input is optional and empty, then it should remain empty
          ##   however this build needs "powertools"
          if [ -z "${{ inputs.additional_repos }}" ] ; then
            # parse with https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse
            # build with the following:
                ## $ printf "%s\n%s\n" "powertools" "powerpoles" | jq -R -s -c 'split("\n") | map(select(length>0))'
            echo 'additional_repos=["powertools"]' >> $GITHUB_OUTPUT
          else
            echo "additional_repos=${{ inputs.additional_repos }}" >> $GITHUB_OUTPUT
          fi
      - name: List
        run: |
          echo "# Environment"
          env | sort
          echo 
          echo "Deploying build ${{ steps.set_step.outputs.spec_file }}"
          echo
          echo "# working directory (pwd)"
          pwd
          ls -lR
      - name: Validate
        id: validate
        run: |
          echo "# Environment"
          env | sort
          echo
          echo "# working directory (pwd)"
          pwd
          echo
          echo "# listing all files"
          ls -lR
          echo ""

      # Change @main to a specific commit SHA or version tag, e.g.:
      # actions/hello-world-docker-action@e76147da8e5c81eaf017dede5645551d4b94427b
      # actions/hello-world-docker-action@v1.2.3
      - name: Build RPM in Docker Action
        id: build-rhel-8
        uses: EWBr0wn/hello-world-docker-action@rockylinux-dev
        with:
          spec_file: ${{ steps.set_step.outputs.spec_file }}
          additional_repos: ${{ steps.set_repo.outputs.additional_repos }}
          who-to-greet: ${{ inputs.who-to-greet }}

      - name: Echo
        run: |
          echo "Content-type: ${{ steps.build-rhel-8.outputs.rpm_content_type }}"
          echo "RPM(s): '${{ steps.build-rhel-8.outputs.built_rpm_array }}'"
          echo "SRPM: '${{ steps.build-rhel-8.outputs.built_srpm_array }}'"
          for r in $(echo '${{ steps.build-rhel-8.outputs.built_rpm_array }}' | jq -r .[]) ; do
            ls -l ${r}
          done
          for s in $(echo '${{ steps.build-rhel-8.outputs.built_srpm_array }}' | jq -r .[]) ; do
            ls -l ${s}
          done